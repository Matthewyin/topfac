var G=Object.defineProperty;var $=(a,n,i)=>n in a?G(a,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[n]=i;var w=(a,n,i)=>$(a,typeof n!="symbol"?n+"":n,i);import{U as b,r as C}from"./DzxsBtto.js";var Y=(a=>(a.SUCCESS="success",a.INFO="info",a.WARNING="warning",a.ERROR="error",a))(Y||{});const d=C([]),v=C(!1);let o=null;const h={ERR_NETWORK:"网络连接失败，请检查网络设置",ERR_TIMEOUT:"请求超时，请稍后重试",ERR_CONNECTION_REFUSED:"无法连接到服务器，请稍后重试",400:"请求参数错误",401:"未授权访问，请重新登录",403:"权限不足，无法访问该资源",404:"请求的资源不存在",500:"服务器内部错误，请稍后重试",502:"网关错误，请稍后重试",503:"服务暂时不可用，请稍后重试",default:"操作失败，请稍后重试"},L=()=>{const a=e=>{const s={id:Date.now().toString(),type:e.type||"unknown",message:e.message||"未知错误",details:e.details,timestamp:new Date,action:e.action,...e};return d.value.push(s),setTimeout(()=>{n(s.id)},5e3),s.id},n=e=>{const s=d.value.findIndex(t=>t.id===e);s>-1&&d.value.splice(s,1)},i=()=>{d.value=[]},g=(e,s)=>{console.error("API错误:",e);let t=h.default,c="api";if(e.response){const l=e.response.status.toString();t=h[l]||`服务器错误 (${l})`}else e.request?(c="network",e.code?t=h[e.code]||h.default:t="网络请求失败，请检查网络连接"):t=e.message||h.default;return a({type:c,message:t,details:e,action:s})},K=(e,s)=>a({type:"validation",message:e,details:s}),f=e=>{v.value=e},M=async(e,s)=>{try{(s==null?void 0:s.showGlobalLoading)!==!1&&f(!0);const t=await e();return s!=null&&s.successMessage&&console.log(s.successMessage),t}catch(t){return g(t,s==null?void 0:s.errorAction),null}finally{(s==null?void 0:s.showGlobalLoading)!==!1&&f(!1)}},P=async(e,s=3,t=1e3)=>{for(let c=1;c<=s;c++)try{return await e()}catch(l){if(c===s)return g(l,`重试${s}次后仍然失败`),null;await new Promise(u=>setTimeout(u,t*c))}return null},D=e=>{o=e},I=(e,s)=>{let t="UNKNOWN_ERROR",c="medium",l="发生未知错误",u="",O="";if(e!=null&&e.response){const R=e.response.status,E=e.response.data;R===401||R===403?(t="API_KEY_ERROR",c="high",l="API密钥无效或权限不足",u=(E==null?void 0:E.error)||"请检查API密钥是否正确"):R===429?(t="RATE_LIMIT_ERROR",c="medium",l="API调用频率超限",u="请稍后再试或检查API配额"):R>=500?(t="AI_SERVICE_ERROR",c="high",l="AI服务暂时不可用",u="服务器内部错误，请稍后重试"):R>=400&&(t="VALIDATION_ERROR",c="medium",l="请求参数错误",u=(E==null?void 0:E.error)||"请检查输入参数"),O=R.toString()}else e!=null&&e.code?(e.code==="NETWORK_ERROR"||e.code==="ERR_NETWORK"?(t="NETWORK_ERROR",c="high",l="网络连接失败",u="请检查网络连接或稍后重试"):(e.code==="TIMEOUT"||e.code==="ECONNABORTED")&&(t="TIMEOUT_ERROR",c="medium",l="请求超时",u="网络响应较慢，请稍后重试"),O=e.code):e!=null&&e.message&&(l=e.message,u=e.details||"",e.message.includes("API Key")?(t="API_KEY_ERROR",c="high"):(e.message.includes("格式")||e.message.includes("验证"))&&(t="VALIDATION_ERROR",c="medium"));return{type:t,severity:c,message:l,details:u,code:O,timestamp:new Date().toISOString(),context:s}},A=e=>{const s=_(e.severity),t=`[${e.type}] ${e.message}`;s==="error"?console.error(t,e):s==="warn"?console.warn(t,e):console.log(t,e)},_=e=>{switch(e){case"critical":case"high":return"error";case"medium":return"warn";case"low":return"log";default:return"log"}},N=e=>{switch(e){case"NETWORK_ERROR":return"网络错误";case"API_KEY_ERROR":return"API密钥错误";case"VALIDATION_ERROR":return"输入错误";case"AI_SERVICE_ERROR":return"AI服务错误";case"RATE_LIMIT_ERROR":return"频率限制";case"TIMEOUT_ERROR":return"请求超时";default:return"系统错误"}},T=e=>{switch(e){case"low":return 3e3;case"medium":return 5e3;case"high":return 8e3;case"critical":return 0;default:return 5e3}},y=e=>["NETWORK_ERROR","TIMEOUT_ERROR","AI_SERVICE_ERROR"].includes(e),S=e=>{if(!o)return;const s={type:"error",title:N(e.type),message:e.message,duration:T(e.severity),persistent:e.severity==="critical"};y(e.type)&&(s.actions=[{label:"重试",action:()=>{console.log("用户选择重试")}}]),o(s)},U=(e,s)=>{const t=I(e,s);return A(t),S(t),t},k=(e,s="操作成功")=>{o&&o({type:"success",title:s,message:e,duration:3e3})},p=(e,s="提示")=>{o&&o({type:"info",title:s,message:e,duration:4e3})},V=(e,s="警告")=>{o&&o({type:"warning",title:s,message:e,duration:5e3})};return{errors:b(d),isGlobalLoading:b(v),addError:a,removeError:n,clearErrors:i,handleApiError:g,handleValidationError:K,setGlobalLoading:f,withErrorHandling:M,retryOperation:P,setNotificationCallback:D,parseError:I,logError:A,getLogLevel:_,getErrorTitle:N,getNotificationDuration:T,canRetry:y,showErrorNotification:S,handleError:U,showSuccess:k,showInfo:p,showWarning:V}},r=class r{constructor(){w(this,"handler",L())}static getInstance(){return r.instance||(r.instance=new r),r.instance}setNotificationCallback(n){this.handler.setNotificationCallback(n)}handleError(n,i){return this.handler.handleError(n,i)}showSuccess(n,i="操作成功"){this.handler.showSuccess(n,i)}showInfo(n,i="提示"){this.handler.showInfo(n,i)}showWarning(n,i="警告"){this.handler.showWarning(n,i)}};w(r,"instance",null);let m=r;function W(){const a=L(),n=m.getInstance();return{...a,setNotificationCallback:n.setNotificationCallback.bind(n),getInstance:()=>n}}function x(a,n){return W().handleError(a,n)}function B(a,n){W().showSuccess(a,n)}export{Y as N,x as h,B as s,W as u};
