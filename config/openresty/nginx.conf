user www-data;
worker_processes auto;
pid /var/run/openresty.pid;
include /usr/local/openresty/nginx/modules/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	##
	# Lua Settings
	##

	# Lua模块路径
	lua_package_path "/usr/local/openresty/lualib/custom/?.lua;/usr/local/openresty/lualib/?.lua;;";

	# 共享内存字典（用于日志缓冲）
	lua_shared_dict log_buffer 100m;  # 100MB缓冲区

	##
	# Rate Limiting (限流配置)
	##

	# 限制扫描器/爬虫的访问频率
	# 每个IP每秒最多1个请求，突发允许5个
	limit_req_zone $binary_remote_addr zone=scanner_limit:10m rate=1r/s;

	# 限制API访问频率
	# 每个IP每秒最多10个请求，突发允许20个
	limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

	# 限制总体访问频率（防DDoS）
	# 每个IP每秒最多50个请求
	limit_req_zone $binary_remote_addr zone=general_limit:10m rate=50r/s;
	
	# 初始化阶段（master进程）
	init_by_lua_block {
		local log_buffer = require "log_buffer"
		log_buffer.init()
		ngx.log(ngx.INFO, "[Nginx] JSON logger initialized")
	}
	
	# Worker进程初始化
	init_worker_by_lua_block {
		local log_buffer = require "log_buffer"
		
		-- 启动定时刷新任务
		log_buffer.start_flush_timer()
		
		-- 启动定时清理任务（每天凌晨3点）
		local function cleanup_timer(premature)
			if premature then
				return
			end
			
			-- 清理180天前的日志
			log_buffer.cleanup_old_logs(180)
			
			-- 计算到明天凌晨3点的秒数
			local now = ngx.now()
			local tomorrow_3am = os.time({
				year = os.date("%Y"),
				month = os.date("%m"),
				day = os.date("%d") + 1,
				hour = 3,
				min = 0,
				sec = 0
			})
			local delay = tomorrow_3am - now
			
			-- 重新设置定时器
			ngx.timer.at(delay, cleanup_timer)
		end
		
		-- 首次执行（延迟到明天凌晨3点）
		local now = os.time()
		local tomorrow_3am = os.time({
			year = os.date("%Y"),
			month = os.date("%m"),
			day = os.date("%d") + 1,
			hour = 3,
			min = 0,
			sec = 0
		})
		local delay = tomorrow_3am - now
		ngx.timer.at(delay, cleanup_timer)
		
		ngx.log(ngx.INFO, "[Worker] JSON logger worker initialized")
	}

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /usr/local/openresty/nginx/conf/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	# 保留传统日志格式（作为备份）
	access_log /var/log/openresty/access.log;
	error_log /var/log/openresty/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /usr/local/openresty/nginx/conf/conf.d/*.conf;
	include /usr/local/openresty/nginx/conf/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}

